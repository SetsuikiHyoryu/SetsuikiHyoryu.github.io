import{_ as s,c as a,o as i,a3 as e}from"./chunks/framework.Cbi_dvob.js";const b=JSON.parse('{"title":"使用 Docker 容器创建 linux 服务器（因为整个流程坑太多，目前冻结中）","description":"","frontmatter":{},"headers":[],"relativePath":"zh/archive/docker-linux-server.md","filePath":"zh/archive/docker-linux-server.md","lastUpdated":1721580119000}'),n={name:"zh/archive/docker-linux-server.md"},l=e(`<h1 id="使用-docker-容器创建-linux-服务器-因为整个流程坑太多-目前冻结中" tabindex="-1">使用 Docker 容器创建 linux 服务器（因为整个流程坑太多，目前冻结中） <a class="header-anchor" href="#使用-docker-容器创建-linux-服务器-因为整个流程坑太多-目前冻结中" aria-label="Permalink to &quot;使用 Docker 容器创建 linux 服务器（因为整个流程坑太多，目前冻结中）&quot;">​</a></h1><h2 id="_1-安装-linux-发行版镜像" tabindex="-1">1. 安装 linux 发行版镜像 <a class="header-anchor" href="#_1-安装-linux-发行版镜像" aria-label="Permalink to &quot;1. 安装 linux 发行版镜像&quot;">​</a></h2><p>以 ubuntu 为例，<a href="https://hub.docker.com/_/ubuntu" target="_blank" rel="noreferrer">docker hub</a> 页面的右上方提到了 <code>docker pull ubuntu</code>（默认即为 <code>latest</code>） 下载镜像。</p><h2 id="_2-运行容器" tabindex="-1">2. 运行容器 <a class="header-anchor" href="#_2-运行容器" aria-label="Permalink to &quot;2. 运行容器&quot;">​</a></h2><p><a href="https://docs.docker.com/reference/cli/docker/" target="_blank" rel="noreferrer">docker CLI reference</a></p><h3 id="_2-1-创建容器" tabindex="-1">2.1. 创建容器 <a class="header-anchor" href="#_2-1-创建容器" aria-label="Permalink to &quot;2.1. 创建容器&quot;">​</a></h3><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Powershell 中的换行符是「\`」不是「\\」</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> virtual-server</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --publish</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 9922:22</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --publish</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 9780:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --tty</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ubuntu</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><code>--tty</code> 创建伪终端，不在 <code>create</code> 时指定这个，下次运行容器会直接运行到终止。</li></ul><h3 id="_2-2-启动容器" tabindex="-1">2.2. 启动容器 <a class="header-anchor" href="#_2-2-启动容器" aria-label="Permalink to &quot;2.2. 启动容器&quot;">​</a></h3><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> virtual-server</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-3-进入容器" tabindex="-1">2.3. 进入容器 <a class="header-anchor" href="#_2-3-进入容器" aria-label="Permalink to &quot;2.3. 进入容器&quot;">​</a></h3><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --interactive</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tty</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> virtual-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/bash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><code>--interactive</code> 使用标准输入交互式地访问容器，不指定这个参数就会无法从命令行干涉。</li><li><code>--tty</code> 创建伪终端，不指定这个参数就没办法执行 shell。</li><li><code>/bin/bash</code> 就是要在容器内执行的命令。</li></ul><h3 id="_2-4-以上三者可用-docker-run-一并执行" tabindex="-1">2.4. 以上三者可用 <code>docker run</code> 一并执行 <a class="header-anchor" href="#_2-4-以上三者可用-docker-run-一并执行" aria-label="Permalink to &quot;2.4. 以上三者可用 \`docker run\` 一并执行&quot;">​</a></h3><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Powershell 中的换行符是「\`」不是「\\」</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> virtual-server</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --publish</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 9922:22</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --publish</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 9780:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ubuntu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/bash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="_3-安装服务器所需最少程序" tabindex="-1">3. 安装服务器所需最少程序 <a class="header-anchor" href="#_3-安装服务器所需最少程序" aria-label="Permalink to &quot;3. 安装服务器所需最少程序&quot;">​</a></h2><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新 apt-get</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --yes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssh-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> neovim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_4-启动-ssh" tabindex="-1">4. 启动 ssh <a class="header-anchor" href="#_4-启动-ssh" aria-label="Permalink to &quot;4. 启动 ssh&quot;">​</a></h2><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_5-安装数据库-以-postgresql-为例" tabindex="-1">5. 安装数据库（以 PostgreSQL 为例） <a class="header-anchor" href="#_5-安装数据库-以-postgresql-为例" aria-label="Permalink to &quot;5. 安装数据库（以 PostgreSQL 为例）&quot;">​</a></h2><p>下载数据库 <br><code>apt install postgresql</code> <br> See: <a href="https://www.postgresql.org/download/linux/ubuntu/" target="_blank" rel="noreferrer">https://www.postgresql.org/download/linux/ubuntu/</a></p><p>设置数据库目录到环境变量 <br><code>export PGDATA=/sample/data</code></p><p>创建普通用户（PostgreSQL 部分命令不能使用 root 用户执行） <br><code>useradd -d /home/username -m username</code></p><p>修改数据库目录访问权限 <br><code>chown username:username /sample/data</code></p><p>初始化数据库 <br><code>initdb</code> <br> 可能不在环境变量里，postgres 的 bin 目录为 <code>/usr/lib/postgres/&lt;version&gt;/bin</code></p><p>启动数据库服务 <br><code>pg_ctl start</code> <br> 可能不在环境变量里，postgres 的 bin 目录为 <code>/usr/lib/postgres/&lt;version&gt;/bin</code> <br> 这个过程中可能还需要 <code>/var/run/postgresql</code> 的权限。</p><p>访问数据库 <br><code>psql -d postgres</code></p>`,27),t=[l];function r(h,p,d,k,o,c){return i(),a("div",null,t)}const F=s(n,[["render",r]]);export{b as __pageData,F as default};
