import{_ as t,c as e,o as a,a3 as o}from"./chunks/framework.Cbi_dvob.js";const _=JSON.parse('{"title":"C 语言开发环境（Windows）","description":"","frontmatter":{},"headers":[],"relativePath":"zh/programming/language/c/develop-environment.md","filePath":"zh/programming/language/c/develop-environment.md","lastUpdated":1728955305000}'),i={name:"zh/programming/language/c/develop-environment.md"},r=o('<h1 id="c-语言开发环境-windows" tabindex="-1">C 语言开发环境（Windows） <a class="header-anchor" href="#c-语言开发环境-windows" aria-label="Permalink to &quot;C 语言开发环境（Windows）&quot;">​</a></h1><h2 id="c-语言标准库及编译器" tabindex="-1">C 语言标准库及编译器 <a class="header-anchor" href="#c-语言标准库及编译器" aria-label="Permalink to &quot;C 语言标准库及编译器&quot;">​</a></h2><p>Visual Studio Build Tools &lt;YEAR&gt;</p><p>安装完后会以 Visual Studio Installer 的形式存在于计算机中。</p><h2 id="neovim-中的-lsp-formatter-highlight" tabindex="-1">Neovim 中的 LSP / Formatter / Highlight <a class="header-anchor" href="#neovim-中的-lsp-formatter-highlight" aria-label="Permalink to &quot;Neovim 中的 LSP / Formatter / Highlight&quot;">​</a></h2><table tabindex="0"><thead><tr><th>种类</th><th>名称</th><th>安装方式</th><th>调用者</th></tr></thead><tbody><tr><td>LSP</td><td>clangd</td><td>mason.nvim</td><td>nvim-lspconfig</td></tr><tr><td>Formatter</td><td>clang-format</td><td>mason.nvim</td><td>conform.nvim</td></tr><tr><td>Highlight</td><td>c</td><td>nvim-treesitter</td><td>nvim-treesitter</td></tr></tbody></table><h2 id="编译-c-文件" tabindex="-1">编译 C 文件 <a class="header-anchor" href="#编译-c-文件" aria-label="Permalink to &quot;编译 C 文件&quot;">​</a></h2><ol><li><p>打开 Visual Studio Build Tools 提供的以下两种 shell 的其中一个：</p><ul><li>Developer Command Prompt for VS &lt;YEAR&gt;</li><li>Developer PowerShell for VS &lt;YEAR&gt;</li></ul></li><li><p>调用 <code>cl</code> 命令编译 C 文件为可执行文件。</p></li></ol>',8),l=[r];function d(n,h,s,m,c,p){return a(),e("div",null,l)}const u=t(i,[["render",d]]);export{_ as __pageData,u as default};
